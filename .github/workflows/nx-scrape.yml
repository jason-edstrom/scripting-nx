name: NX Scrape Matrix


on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:


jobs:
  matrix:
    runs-on: ubuntu-latest
    name: Scrape NX for projects
    outputs:
      matrix: ${{ steps.scripting.outputs.affectedJSON }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - run: yarn install

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        id: setSHAs
      - uses: actions/github-script@v6
        id: scripting
        with:
          script: |
            const execSync = require('child_process').execSync;
            let include = [];
            let runner_task = {};
            let nxJson = JSON.parse(execSync(`npx nx print-affected --base=${{ steps.setSHAs.outputs.base }} --head=${{ steps.setSHAs.outputs.head }} --target=build-android, build-ios`).toString().trim())
            nxJson.tasks.forEach(task => {
              let runner_task = {
                id: task.id,
                project: task.target.project,
                target: task.target.target,
                command: task.command,
                outputs: task.outputs
              }

                if (contains(runner_task.target,"build-ios")){
                  runner_tas.os =  'macos-latest';
                } else {
                  runner_task.os =  "ubuntu-latest";
                }


              include.push(runner_task);
            });
            let json={};
            json["include"] = include;
            let ready = JSON.stringify(json);
            core.setOutput('affectedJSON', ready);
      - name: Print json
        run: echo "${{ steps.scripting.outputs.affectedJSON }}"

  check-matrix:
    runs-on: ubuntu-latest
    needs: matrix
    steps:
      - name: Install json2yaml
        run: |
          sudo npm install -g json2yaml

      - name: Check matrix definition
        run: |
          matrix='${{ needs.matrix.outputs.matrix }}'
          echo $matrix
          echo $matrix | jq .
          echo $matrix | json2yaml


  json_custom_execute:
    name: ${{ matrix.target }}
    needs: [matrix]
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - run: npm install -g nx
      - run: yarn install
      - run: nx run ${{ matrix.project }}:${{ matrix.target}}
